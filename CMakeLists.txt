cmake_minimum_required(VERSION 3.5)

message("Adding ${CMAKE_CURRENT_SOURCE_DIR}/cmake/modules to MODULE_PATH: ${CMAKE_MODULE_PATH}")
set(CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake/modules ${CMAKE_MODULE_PATH})


find_package(Git QUIET)
if (NOT GIT_FOUND)
   message("Git not found")
else()
   message("Git exe ${GIT_EXECUTABLE}") 
endif()
execute_process(COMMAND ${GIT_EXECUTABLE} describe --tags WORKING_DIRECTORY ${CMAKE_CURRENT_LIST_DIR} RESULT_VARIABLE res OUTPUT_VARIABLE describe_out ERROR_VARIABLE error_out COMMAND_ECHO STDOUT)
message("Error: ${error_out}")
message("Output: ${describe_out}")
message("Result: ${res}")
message("Call git_describe")
string(REGEX MATCH "[0-9]+\\.[0-9]+\\.[0-9]" VERSION_SHORT ${describe_out})
message("version extracted: ${VERSION_SHORT}")

#include(GetGitRevisionDescription)
#git_describe(GitTagVersion --tags)
#string(REGEX REPLACE "^([0-9]+)\\..*" "\\1" VERSION_MAJOR "${GitTagVersion}")
#string(REGEX REPLACE "^[0-9]+\\.([0-9]+).*" "\\1" VERSION_MINOR "${GitTagVersion}")
#string(REGEX REPLACE "^[0-9]+\\.[0-9]+\\.([0-9]+).*" "\\1" VERSION_PATCH "${GitTagVersion}")
#set(VERSION_SHORT "${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_PATCH}")
project(QtADS LANGUAGES CXX VERSION ${VERSION_SHORT})
option(BUILD_STATIC "Build the static library" OFF)
option(BUILD_EXAMPLES "Build the examples" ON)
if("${CMAKE_SIZEOF_VOID_P}" STREQUAL "4")
    set(ads_PlatformDir "x86")
else()
    set(ads_PlatformDir "x64")
endif()
add_subdirectory(src)
if(BUILD_EXAMPLES)
    add_subdirectory(examples)
    add_subdirectory(demo)
endif()

